import { CalculatorComponent } from './components/calculatorComponent.js';
import { SearchComponent } from './components/searchComponent.js';
import { ProductService } from './services/productService.js';
import { 
  showNotification, 
  registerServiceWorker, 
  setupThemeToggle,
  checkOnlineStatus 
} from './utils/helpers.js';

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
class App {
  constructor() {
    this.state = {
      products: new Map(),
      lastUpdate: null,
      isOnline: true,
      isLoading: true
    };
    
    this.services = {
      productService: new ProductService()
    };
    
    this.components = {};
    
    this.init();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async init() {
    console.group('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Service Worker
      await registerServiceWorker();
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
      setupThemeToggle();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      this.initComponents();
      
      // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      await this.loadProductsData();
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
      this.bindEvents();
      
      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
      this.updateUI();
      
      console.log('üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
      
    } catch (error) {
      console.error('üí• –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
      showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'error');
    }
    
    console.groupEnd();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
   */
  initComponents() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
    
    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–∏—Å–∫–∞
    this.components.search = new SearchComponent({
      minQueryLength: 2,
      maxResults: 10,
      debounceDelay: 300,
      onProductSelect: this.handleProductSelect.bind(this)
    });
    
    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    this.components.calculator = new CalculatorComponent({
      onStandardNotification: this.handleStandardNotification.bind(this)
    });
    
    // –í—Å—Ç–∞–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ DOM
    const searchContainer = document.getElementById('productSearch');
    if (searchContainer && searchContainer.parentNode) {
      searchContainer.parentNode.replaceChild(
        this.components.search.getElement(), 
        searchContainer
      );
    }
    
    const calculatorContainer = document.querySelector('.product-fields-grid');
    if (calculatorContainer && calculatorContainer.parentNode) {
      calculatorContainer.parentNode.replaceChild(
        this.components.calculator.getElement(),
        calculatorContainer
      );
    }
    
    console.log('‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
   */
  async loadProductsData() {
    console.group('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    
    try {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
      this.showLoadingState(true);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
      console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö...');
      const testResults = await this.services.productService.testDataAvailability();
      
      // –ù–∞—Ö–æ–¥–∏–º —Ä–∞–±–æ—á–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫
      const workingSource = testResults.find(result => result.ok);
      if (workingSource) {
        console.log(`‚úÖ –†–∞–±–æ—á–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫: ${workingSource.url}`);
      } else {
        console.warn('‚ö†Ô∏è –ù–µ—Ç —Ä–∞–±–æ—á–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback');
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
      const products = await this.services.productService.loadProducts();
      this.state.products = products;
      this.state.lastUpdate = new Date();
      
      this.updateProductsCount();
      this.updateLastUpdateInfo();
      this.showLoadingState(false);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
      const diagnostics = this.services.productService.getDiagnostics();
      console.log('üìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:', diagnostics);
      
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
      this.activateSearch();
      
      console.log('üéâ –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      console.groupEnd();
      
    } catch (error) {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', error);
      this.showLoadingState(false);
      
      // –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö';
      
      if (error.message.includes('timeout')) {
        errorMessage = '–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.';
      } else if (error.message.includes('HTTP')) {
        errorMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.';
      } else if (error.message.includes('JSON')) {
        errorMessage = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª data.json.';
      } else if (error.message.includes('–í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏')) {
        errorMessage = '–í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.';
      }
      
      showNotification(errorMessage, 'error');
      
      // –í—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º UI —Å —Ç–µ–º, —á—Ç–æ –µ—Å—Ç—å
      this.updateProductsCount();
      this.updateLastUpdateInfo();
      this.activateSearch();
      console.groupEnd();
    }
  }

  /**
   * –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
   */
  activateSearch() {
    const searchInput = document.querySelector('#productSearch');
    if (searchInput) {
      searchInput.disabled = false;
      searchInput.placeholder = '–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞...';
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    const productsCount = this.state.products.size;
    if (productsCount > 0) {
      showNotification(`–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–∞ (${productsCount} –ø—Ä–æ–¥—É–∫—Ç–æ–≤)`, 'success', 3000);
    }
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
   */
  showLoadingState(show) {
    const dataStatus = document.getElementById('dataStatus');
    const searchInput = document.querySelector('#productSearch');
    
    if (dataStatus) {
      dataStatus.style.display = show ? 'block' : 'none';
    }
    
    if (searchInput) {
      searchInput.disabled = show;
    }
    
    this.state.isLoading = show;
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
   */
  updateProductsCount() {
    const countElement = document.getElementById('productsCount');
    if (countElement) {
      countElement.textContent = this.state.products.size;
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
   */
  updateLastUpdateInfo() {
    const lastUpdateElement = document.getElementById('lastUpdate');
    const lastUpdateTimeElement = document.getElementById('lastUpdateTime');
    const lastUpdateInfoElement = document.getElementById('lastUpdateInfo');
    
    if (this.state.lastUpdate) {
      const timeString = this.state.lastUpdate.toLocaleTimeString('ru-RU');
      const dateString = this.state.lastUpdate.toLocaleDateString('ru-RU');
      
      if (lastUpdateElement) {
        lastUpdateElement.textContent = timeString;
      }
      
      if (lastUpdateTimeElement) {
        lastUpdateTimeElement.textContent = `${dateString} ${timeString}`;
      }
      
      if (lastUpdateInfoElement) {
        lastUpdateInfoElement.classList.remove('hidden');
      }
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω
   */
  updateOnlineStatus() {
    const cacheStatusElement = document.getElementById('cacheStatus');
    const offlineStatusElement = document.getElementById('offlineStatus');
    
    this.state.isOnline = checkOnlineStatus();
    
    if (cacheStatusElement) {
      cacheStatusElement.textContent = this.state.isOnline ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ—Ñ–ª–∞–π–Ω';
      cacheStatusElement.className = this.state.isOnline ? 
        'stat-value text-2xl font-bold text-green-600 dark:text-green-400' : 
        'stat-value text-2xl font-bold text-yellow-600 dark:text-yellow-400';
    }
    
    if (offlineStatusElement) {
      offlineStatusElement.style.display = this.state.isOnline ? 'none' : 'block';
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
   */
  handleProductSelect(product) {
    console.log('üéØ –í—ã–±—Ä–∞–Ω –ø—Ä–æ–¥—É–∫—Ç:', product);
    
    if (this.components.calculator) {
      this.components.calculator.setProduct(product);
    }
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É
    setTimeout(() => {
      const calculatorSection = document.querySelector('.calculator-card');
      if (calculatorSection) {
        calculatorSection.scrollIntoView({ 
          behavior: 'smooth', 
          block: 'start' 
        });
      }
    }, 100);
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–µ
   */
  handleStandardNotification(standard) {
    const container = document.getElementById('standardNotificationContainer');
    if (!container || !standard) return;
    
    container.innerHTML = `
      <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 dark:bg-yellow-900 dark:border-yellow-700">
        <div class="flex items-center">
          <i class="fas fa-file-contract text-yellow-600 text-lg mr-3 dark:text-yellow-300"></i>
          <div>
            <p class="text-yellow-700 font-medium text-sm dark:text-yellow-300">–°—Ç–∞–Ω–¥–∞—Ä—Ç –∫–∞—á–µ—Å—Ç–≤–∞</p>
            <p class="text-yellow-600 text-xs mt-1 dark:text-yellow-400">${standard}</p>
          </div>
        </div>
      </div>
    `;
  }

  /**
   * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
   */
  bindEvents() {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const refreshButton = document.getElementById('refreshFooterButton');
    if (refreshButton) {
      refreshButton.addEventListener('click', this.handleRefresh.bind(this));
    }
    
    // –û–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω —Å–æ–±—ã—Ç–∏—è
    window.addEventListener('online', this.handleOnlineStatusChange.bind(this));
    window.addEventListener('offline', this.handleOnlineStatusChange.bind(this));
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
    document.addEventListener('keydown', this.handleGlobalKeydown.bind(this));
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
   */
  async handleRefresh() {
    try {
      showNotification('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...', 'info');
      
      await this.services.productService.forceRefresh();
      await this.loadProductsData();
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
      showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö', 'error');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
   */
  handleOnlineStatusChange() {
    this.updateOnlineStatus();
    
    if (this.state.isOnline) {
      showNotification('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', 'success', 3000);
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Å–µ—Ç–∏
      setTimeout(() => {
        this.services.productService.synchronize().then(success => {
          if (success) {
            this.loadProductsData();
          }
        });
      }, 2000);
    } else {
      showNotification('–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º', 'warning', 3000);
    }
  }

  /**
   * –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
   */
  handleGlobalKeydown(event) {
    // Ctrl + R - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    if (event.ctrlKey && event.key === 'r') {
      event.preventDefault();
      this.handleRefresh();
    }
    
    // Ctrl + F - —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–∏—Å–∫
    if (event.ctrlKey && event.key === 'f') {
      event.preventDefault();
      if (this.components.search) {
        this.components.search.focus();
      }
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
   */
  updateUI() {
    this.updateOnlineStatus();
    this.updateProductsCount();
    this.updateLastUpdateInfo();
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  getState() {
    return { ...this.state };
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
  window.app = new App();
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.showNotification = showNotification;
