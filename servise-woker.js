const CACHE_NAME = 'progress-calculator-v3.0';

/**
 * Service Worker –¥–ª—è PWA –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
class CalculatorServiceWorker {
  constructor() {
    this.version = '3.0.0';
    this.init();
  }

  async init() {
    self.addEventListener('install', this.handleInstall.bind(this));
    self.addEventListener('activate', this.handleActivate.bind(this));
    self.addEventListener('fetch', this.handleFetch.bind(this));
    
    console.log('üõ†Ô∏è Service Worker initialized');
  }

  async handleInstall(event) {
    console.log('üîß Service Worker: –£—Å—Ç–∞–Ω–æ–≤–∫–∞');
    event.waitUntil(self.skipWaiting());
  }

  async handleActivate(event) {
    console.log('üéØ Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—è');
    event.waitUntil(self.clients.claim());
  }

  async handleFetch(event) {
    const { request } = event;
    const url = new URL(request.url);

    console.log('üåê Service Worker fetch:', url.pathname);

    // –î–ª—è data.json –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é "–°–Ω–∞—á–∞–ª–∞ —Å–µ—Ç—å, –ø–æ—Ç–æ–º –∫—ç—à"
    if (url.pathname.includes('data.json')) {
      event.respondWith(this.handleDataRequest(request));
      return;
    }

    // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ - "–°–Ω–∞—á–∞–ª–∞ –∫—ç—à, –ø–æ—Ç–æ–º —Å–µ—Ç—å"
    event.respondWith(this.handleStaticRequest(request));
  }

  async handleDataRequest(request) {
    try {
      // –ü—Ä–æ–±—É–µ–º —Å–µ—Ç—å first
      const networkResponse = await fetch(request);
      
      if (networkResponse.ok) {
        console.log('‚úÖ Service Worker: –î–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ç–∏');
        return networkResponse;
      }
      throw new Error('Network response not ok');
    } catch (error) {
      console.log('‚ùå Service Worker: –û—à–∏–±–∫–∞ —Å–µ—Ç–∏, –ø—Ä–æ–±—É–µ–º –∫—ç—à');
      
      // –ü—Ä–æ–±—É–µ–º –∫—ç—à
      const cache = await caches.open(CACHE_NAME);
      const cachedResponse = await cache.match(request);
      
      if (cachedResponse) {
        console.log('üíæ Service Worker: –î–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞');
        return cachedResponse;
      }
      
      // Fallback
      console.log('üÜò Service Worker: –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ');
      return new Response(JSON.stringify(this.getFallbackData()), {
        headers: { 'Content-Type': 'application/json' }
      });
    }
  }

  async handleStaticRequest(request) {
    const cache = await caches.open(CACHE_NAME);
    const cachedResponse = await cache.match(request);
    
    if (cachedResponse) {
      console.log('üíæ Service Worker: –°—Ç–∞—Ç–∏–∫–∞ –∏–∑ –∫—ç—à–∞');
      return cachedResponse;
    }
    
    try {
      const networkResponse = await fetch(request);
      if (networkResponse.ok) {
        await cache.put(request, networkResponse.clone());
      }
      return networkResponse;
    } catch (error) {
      return new Response('Not found', { status: 404 });
    }
  }

  getFallbackData() {
    return [
      {
        "–ö–æ–¥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏": "000001",
        "–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ (—Ä—É—Å—Å–∫–æ–µ)": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 1 (fallback)",
        "–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏": 365,
        "–®—Ç—É–∫ –≤ —É–ø–∞–∫–æ–≤–∫–µ": 10,
        "–®—Ç—Ä–∏—Ö–∫–æ–¥ —É–ø–∞–∫–æ–≤–∫–∏": "1234567890123",
        "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å",
        "–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞": "–ì–û–°–¢ 12345-2020"
      }
    ];
  }
}

new CalculatorServiceWorker();